MPG prediction
========================================================
author: yhuai
date: 2018-05-25
autosize: true

Overview
========================================================

Course Project: Shiny Application and Reproducible Pitch
    
- am	 Transmission (0 = automatic, 1 = manual)
- wt	 Weight (1000 lbs)
- hp	 Gross horsepower

Dataset
========================================================

```{r}
str(mtcars)
```

Shiny UI
========================================================

```{r, echo=FALSE}
library(shiny)

shinyUI(fluidPage(
    titlePanel("MPG Prediction"),
    sidebarLayout(
        sidebarPanel(
            helpText("This application predicts the Miles/(US) gallon of a car based on its characteristics."),

            selectInput("am", "Transmission (0 = automatic, 1 = manual)", choices = list('Please select'='*', '0'='0','1'='1')),
            sliderInput("hp", "What is the Gross horsepower of the car?", 52, 335, value=100),
            sliderInput("wt", "What is the Weight (1000 lbs) of the car?", 1.5, 5.5, value=3, step = 0.1),
            submitButton("Submit")
            ),
        
        
        mainPanel(
            plotOutput("plot1"),
            plotOutput("plot2"),

            h3("Predicted the car MPG is:"),
            textOutput("result")
    )
  )
))

```

Shiny Server
========================================================

```{r}
library(shiny)
library(ggplot2)

shinyServer(function(input, output){
    output$result <- renderText({
       
        model <- lm(mpg ~ hp , mtcars)
        pred <- predict(model, newdata = data.frame(hp = input$hp,
                                                    wt = input$wt))
        predmpg <- round(pred,2)
        predmpg
    })

    output$plot1 <- renderPlot({
       
        model <- lm(mpg ~ hp , mtcars)
        pred <- predict(model, newdata = data.frame(hp = input$hp,
                                              wt = input$wt
                                              ))
        
        plot <- ggplot(data=mtcars, aes(x = hp, y = mpg)) +
                    geom_point()+
                    geom_smooth(method = "lm")
        plot
    })
    
    output$plot2 <- renderPlot({
        
        model <- lm(mpg ~ wt , mtcars)
        pred <- predict(model, newdata = data.frame(hp = input$hp,
                                                    wt = input$wt
                                                    ))
        
        plot <- ggplot(data=mtcars, aes(x = wt, y = mpg)) +
            geom_point()+
            geom_smooth(method = "lm")
        plot
    })

})

```